/*     ______            __                                      *\
**    / ____/_  __ ___  / /     FunL Programming Language        **
**   / __/ / / / / __ \/ /      (c) 2014, Edward A. Maxedon, Sr. **
**  / /   / /_/ / / / / /__     http://funl-lang.org/            **
** /_/    \____/_/ /_/____/                                      **
\*                                                               */

function funl.modules.ModuleMath.{
	sqrt
	}

def abs( x ) = if x < 0 then -x else x

def
	choose( n, k ) | k < 0 or k > n = 0
	choose( n, 0 ) = 1
	choose( n, n ) = 1
	choose( n, k ) = product( [(n - i)/(i + 1) | i <- 0:min( k, n - k )] )

def sigma( range, f ) = sum( [f(x) | x <- range] )

def even( n::Integer ) = n%2 == 0

def odd( n::Integer ) = n%2 == 1

def B( n::Integer ) | n >= 0 = sigma( 0..n, k -> 1/(k + 1)*sigma(0..k, r -> (if even(r) then 1 else -1)*choose(k, r)*(r^n)) )